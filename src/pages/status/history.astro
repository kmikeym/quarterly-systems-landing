---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Activity History - Quarterly Systems">
	<nav class="bg-white border-b border-gray-200">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="flex justify-between items-center h-16">
				<div class="flex items-center">
					<a href="/" class="text-xl font-bold text-gray-900">Quarterly Systems</a>
				</div>
				<div class="hidden md:block">
					<div class="ml-10 flex items-baseline space-x-4">
						<a href="https://vibecode.quarterly.systems" class="text-gray-600 hover:text-purple-600 hover:shadow-lg hover:shadow-purple-500/25 px-3 py-2 rounded-md text-sm font-medium flex items-center transition-all duration-200">
							Product
							<span class="ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">beta</span>
						</a>
						<a href="/apps" class="text-gray-600 hover:text-purple-600 hover:shadow-lg hover:shadow-purple-500/25 px-3 py-2 rounded-md text-sm font-medium transition-all duration-200">Apps</a>
						<a href="#knowledge" class="text-gray-600 hover:text-purple-600 hover:shadow-lg hover:shadow-purple-500/25 px-3 py-2 rounded-md text-sm font-medium transition-all duration-200">Knowledge Base</a>
						<a href="/waitlist" class="text-gray-600 hover:text-purple-600 hover:shadow-lg hover:shadow-purple-500/25 px-3 py-2 rounded-md text-sm font-medium transition-all duration-200">Waitlist</a>
					</div>
				</div>
			</div>
		</div>
	</nav>

	<main class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
		<div class="mb-8">
			<div class="flex items-center justify-between mb-4">
				<div>
					<h1 class="text-3xl font-bold text-gray-900">Activity History</h1>
					<p class="text-gray-600 mt-2">Complete operational timeline across all systems</p>
				</div>
				<a href="/status" class="bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200 transition-colors">
					← Back to Status
				</a>
			</div>

			<!-- Filter Options -->
			<div class="flex flex-wrap gap-2 mb-6">
				<button class="filter-btn active px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800" data-filter="all">
					All Activities
				</button>
				<button class="filter-btn px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200" data-filter="development">
					Development
				</button>
				<button class="filter-btn px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200" data-filter="content">
					Content
				</button>
				<button class="filter-btn px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200" data-filter="location">
					Location
				</button>
			</div>
		</div>

		<!-- Activities List -->
		<div id="activities-container" class="space-y-4">
			<div id="loading" class="text-center py-8">
				<div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
				<p class="text-gray-600 mt-2">Loading activities...</p>
			</div>
		</div>

		<!-- Pagination -->
		<div id="pagination" class="mt-8 flex justify-between items-center" style="display: none;">
			<button id="prevBtn" class="bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed">
				Previous
			</button>
			<span id="pageInfo" class="text-gray-600 text-sm"></span>
			<button id="nextBtn" class="bg-gray-100 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-200 disabled:opacity-50 disabled:cursor-not-allowed">
				Next
			</button>
		</div>
	</main>

	<footer class="bg-white border-t border-gray-200">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
			<div class="flex flex-col md:flex-row justify-between items-center">
				<div class="mb-4 md:mb-0">
					<span class="text-sm text-gray-500">© 2025 Quarterly Systems</span>
					<br>
					<span class="text-xs text-gray-400">a <a href="https://kmikeym.com" class="hover:text-gray-600 transition-colors">K5M</a> company</span>
				</div>
				<div class="flex space-x-6">
					<a href="/about" class="text-sm text-gray-500 hover:text-gray-900">About</a>
					<span class="text-gray-300">·</span>
					<a href="/changelog" class="text-sm text-gray-500 hover:text-gray-900">Changelog</a>
					<span class="text-gray-300">·</span>
					<a href="/contact" class="text-sm text-gray-500 hover:text-gray-900">Contact</a>
					<span class="text-gray-300">·</span>
					<a href="/status" class="text-sm text-gray-500 hover:text-gray-900">Status</a>
				</div>
			</div>
		</div>
	</footer>

	<script>
		let currentPage = 1;
		let currentFilter = 'all';
		let activitiesData = [];

		document.addEventListener('DOMContentLoaded', function() {
			loadActivities();
			setupFilters();
			setupPagination();
		});

		async function loadActivities(page = 1) {
			const loading = document.getElementById('loading');
			const container = document.getElementById('activities-container');

			loading.style.display = 'block';

			try {
				const response = await fetch(`https://status-api.quarterly.systems/api/activities?page=${page}&limit=20`);
				const data = await response.json();

				activitiesData = data.activities;
				renderActivities(activitiesData);
				updatePagination(data.pagination);
				currentPage = page;
			} catch (error) {
				container.innerHTML = '<div class="text-center py-8 text-red-600">Error loading activities</div>';
			} finally {
				loading.style.display = 'none';
			}
		}

		function renderActivities(activities) {
			const container = document.getElementById('activities-container');
			const loading = document.getElementById('loading');

			const filteredActivities = currentFilter === 'all'
				? activities
				: activities.filter(activity => activity.type === currentFilter);

			if (filteredActivities.length === 0) {
				container.innerHTML = loading.outerHTML + '<div class="text-center py-8 text-gray-600">No activities found for this filter</div>';
				return;
			}

			const activitiesHTML = filteredActivities.map(activity => {
				const timeAgo = getTimeAgo(activity.timestamp);
				const { color, bgColor } = getActivityColors(activity.type);
				const icon = getActivityIcon(activity.type);

				return `
					<div class="flex items-start space-x-4 p-4 bg-white rounded-lg border border-gray-200 shadow-sm">
						<div class="flex-shrink-0 w-10 h-10 ${bgColor} rounded-full flex items-center justify-center">
							${icon}
						</div>
						<div class="flex-1 min-w-0">
							<div class="flex items-center justify-between mb-1">
								${activity.metadata?.link ?
									`<h3 class="font-medium text-gray-900"><a href="${activity.metadata.link}" target="_blank" class="hover:text-blue-600 transition-colors">${activity.title}</a></h3>` :
									`<h3 class="font-medium text-gray-900">${activity.title}</h3>`
								}
								<span class="text-sm text-gray-500 flex-shrink-0 ml-2">${timeAgo}</span>
							</div>
							<p class="text-sm text-gray-600 mb-2">
								${activity.metadata?.link ?
									`<a href="${activity.metadata.link}" target="_blank" class="hover:text-blue-600 transition-colors">${activity.description}</a>` :
									activity.description
								}
							</p>
							<div class="flex items-center justify-between">
								<div class="flex items-center space-x-2">
									<span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${bgColor}">
										${activity.source}
									</span>
									<span class="text-xs text-gray-500">${new Date(activity.timestamp).toLocaleString()}</span>
								</div>
								${activity.location ?
									`<span class="text-xs text-gray-500 flex items-center">
										<svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
											<path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
										</svg>
										${activity.location}
									</span>` : ''
								}
							</div>
						</div>
					</div>
				`;
			}).join('');

			container.innerHTML = loading.outerHTML + activitiesHTML;
		}

		function getActivityColors(type) {
			switch (type) {
				case 'development':
					return { color: 'bg-green-500', bgColor: 'bg-green-100 text-green-800' };
				case 'content':
					return { color: 'bg-blue-500', bgColor: 'bg-blue-100 text-blue-800' };
				case 'location':
					return { color: 'bg-purple-500', bgColor: 'bg-purple-100 text-purple-800' };
				default:
					return { color: 'bg-gray-500', bgColor: 'bg-gray-100 text-gray-800' };
			}
		}

		function getActivityIcon(type) {
			switch (type) {
				case 'development':
					return '<svg class="w-5 h-5 text-green-600" fill="currentColor" viewBox="0 0 20 20"><path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"></path></svg>';
				case 'content':
					return '<svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 20 20"><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>';
				case 'location':
					return '<svg class="w-5 h-5 text-purple-600" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path></svg>';
				default:
					return '<svg class="w-5 h-5 text-gray-600" fill="currentColor" viewBox="0 0 20 20"><path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path></svg>';
			}
		}

		function getTimeAgo(timestamp) {
			const now = new Date();
			const time = new Date(timestamp);
			const diffInSeconds = Math.floor((now - time) / 1000);

			if (diffInSeconds < 60) return 'just now';
			if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;
			if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;
			return `${Math.floor(diffInSeconds / 86400)}d ago`;
		}

		function setupFilters() {
			const filterBtns = document.querySelectorAll('.filter-btn');
			filterBtns.forEach(btn => {
				btn.addEventListener('click', function() {
					// Update active button
					filterBtns.forEach(b => {
						b.classList.remove('active', 'bg-blue-100', 'text-blue-800');
						b.classList.add('bg-gray-100', 'text-gray-700');
					});
					this.classList.add('active', 'bg-blue-100', 'text-blue-800');
					this.classList.remove('bg-gray-100', 'text-gray-700');

					// Apply filter
					currentFilter = this.dataset.filter;
					renderActivities(activitiesData);
				});
			});
		}

		function setupPagination() {
			const prevBtn = document.getElementById('prevBtn');
			const nextBtn = document.getElementById('nextBtn');

			prevBtn.addEventListener('click', () => {
				if (currentPage > 1) {
					loadActivities(currentPage - 1);
				}
			});

			nextBtn.addEventListener('click', () => {
				loadActivities(currentPage + 1);
			});
		}

		function updatePagination(pagination) {
			const paginationDiv = document.getElementById('pagination');
			const prevBtn = document.getElementById('prevBtn');
			const nextBtn = document.getElementById('nextBtn');
			const pageInfo = document.getElementById('pageInfo');

			paginationDiv.style.display = 'flex';

			prevBtn.disabled = !pagination.hasPrev;
			nextBtn.disabled = !pagination.hasNext;

			pageInfo.textContent = `Page ${pagination.page} of ${pagination.totalPages} (${pagination.total} total activities)`;
		}
	</script>
</Layout>