---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Location Admin - Quarterly Systems">
	<nav class="bg-white border-b border-gray-200">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="flex justify-between items-center h-16">
				<div class="flex items-center">
					<a href="/" class="text-xl font-bold text-gray-900">Quarterly Systems</a>
					<span class="ml-4 text-sm text-gray-500">Location Admin</span>
				</div>
			</div>
		</div>
	</nav>

	<main class="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
		<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8">
			<h1 class="text-2xl font-bold text-gray-900 mb-6">Update Location</h1>

			<form id="locationForm" class="space-y-6">
				<div>
					<label for="location" class="block text-sm font-medium text-gray-700 mb-2">
						Location Name
					</label>
					<input
						type="text"
						id="location"
						name="location"
						placeholder="e.g., Portland, OR"
						required
						class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
					>
					<p class="mt-1 text-xs text-gray-500">Enter city and state/country</p>
				</div>

				<div class="grid grid-cols-2 gap-4">
					<div>
						<label for="latitude" class="block text-sm font-medium text-gray-700 mb-2">
							Latitude (optional)
						</label>
						<input
							type="number"
							id="latitude"
							name="latitude"
							step="any"
							placeholder="e.g., 45.5152"
							class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
						>
					</div>
					<div>
						<label for="longitude" class="block text-sm font-medium text-gray-700 mb-2">
							Longitude (optional)
						</label>
						<input
							type="number"
							id="longitude"
							name="longitude"
							step="any"
							placeholder="e.g., -122.6784"
							class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
						>
					</div>
				</div>

				<div>
					<button
						type="button"
						id="getCurrentLocation"
						class="text-sm text-blue-600 hover:text-blue-800 underline"
					>
						Use my current location
					</button>
				</div>

				<div class="flex gap-4">
					<button
						type="submit"
						class="flex-1 bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
						id="submitBtn"
					>
						Update Location
					</button>
					<a
						href="/status"
						class="flex-1 bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 text-center"
					>
						View Status
					</a>
				</div>
			</form>

			<div id="status" class="mt-6 text-sm text-gray-600"></div>
		</div>
	</main>

	<script>
		document.addEventListener('DOMContentLoaded', function() {
			const form = document.getElementById('locationForm');
			const submitBtn = document.getElementById('submitBtn');
			const statusDiv = document.getElementById('status');
			const getCurrentLocationBtn = document.getElementById('getCurrentLocation');

			// Get current location
			getCurrentLocationBtn.addEventListener('click', function() {
				if (!navigator.geolocation) {
					statusDiv.textContent = 'Geolocation not supported by this browser.';
					return;
				}

				statusDiv.textContent = 'Getting your location...';
				navigator.geolocation.getCurrentPosition(
					function(position) {
						document.getElementById('latitude').value = position.coords.latitude.toFixed(6);
						document.getElementById('longitude').value = position.coords.longitude.toFixed(6);
						statusDiv.textContent = 'Location coordinates updated!';
					},
					function(error) {
						statusDiv.textContent = 'Error getting location: ' + error.message;
					},
					{
						enableHighAccuracy: true,
						timeout: 10000,
						maximumAge: 0
					}
				);
			});

			// Form submission
			form.addEventListener('submit', async function(e) {
				e.preventDefault();

				const formData = new FormData(form);
				const location = formData.get('location').trim();
				const latitude = formData.get('latitude');
				const longitude = formData.get('longitude');

				if (!location) {
					statusDiv.textContent = 'Please enter a location name.';
					return;
				}

				submitBtn.disabled = true;
				submitBtn.textContent = 'Updating...';
				statusDiv.textContent = 'Updating location...';

				try {
					const payload = {
						location: location,
						coordinates: (latitude && longitude) ? [parseFloat(latitude), parseFloat(longitude)] : null,
						timestamp: new Date().toISOString()
					};

					const response = await fetch('https://status-api.quarterly.systems/api/location', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify(payload)
					});

					if (response.ok) {
						statusDiv.textContent = `✅ Location updated to "${location}"`;
						form.reset();
					} else {
						const error = await response.text();
						statusDiv.textContent = `❌ Error: ${error}`;
					}
				} catch (error) {
					statusDiv.textContent = `❌ Network error: ${error.message}`;
				} finally {
					submitBtn.disabled = false;
					submitBtn.textContent = 'Update Location';
				}
			});
		});
	</script>
</Layout>